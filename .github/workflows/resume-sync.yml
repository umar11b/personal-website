name: Resume Sync to AWS S3

on:
  push:
    branches:
      - main
    paths:
      - "resume-sync/**"
  workflow_dispatch: # Allow manual triggering

permissions:
  id-token: write
  contents: read

jobs:
  sync-resume:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::931633655568:role/GitHubPortfolioDeploy
          aws-region: us-east-1
          role-session-name: ResumeSync

      - name: Clear old resume files from main bucket
        run: |
          echo "üßπ Clearing old resume files from umarzaman.ca bucket..."
          aws s3 rm s3://umarzaman.ca/Umar_Zaman_Resume.pdf || echo "‚ö†Ô∏è  Old resume file not found"
          aws s3 rm s3://umarzaman.ca/Umar_Zaman_Cloud_Engineer.pdf || echo "‚ö†Ô∏è  Old resume file not found"

      - name: Sync resume to main S3 bucket
        run: |
          # Check if resume file exists
          if [ -f "resume-sync/Umar_Zaman_Cloud_Engineer.pdf" ]; then
            echo "üìÑ Found resume file, syncing to main S3 bucket..."
            aws s3 cp resume-sync/Umar_Zaman_Cloud_Engineer.pdf s3://umarzaman.ca/ --cache-control max-age=31536000,public
            echo "‚úÖ Resume synced successfully to umarzaman.ca bucket"
          else
            echo "‚ùå No resume file found in resume-sync/ directory"
            exit 1
          fi

      - name: List S3 bucket contents
        run: |
          echo "üìã Current contents of umarzaman.ca bucket (resume files):"
          aws s3 ls s3://umarzaman.ca/ | grep -E "(Umar_Zaman|resume)" || echo "No resume files found"

      - name: Invalidate CloudFront cache
        run: |
          echo "üîÑ Finding and invalidating CloudFront cache for resume subdomain..."
          # Find the distribution that serves resume.umarzaman.ca
          DISTRIBUTION_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?contains(Aliases.Items, 'resume.umarzaman.ca')].Id" --output text)
          if [ ! -z "$DISTRIBUTION_ID" ]; then
            echo "üì° Found resume CloudFront distribution: $DISTRIBUTION_ID"
            aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/Umar_Zaman_Cloud_Engineer.pdf"
            echo "‚úÖ CloudFront cache invalidated for resume files"
          else
            echo "‚ö†Ô∏è  No CloudFront distribution found for resume.umarzaman.ca"
            echo "üîÑ Trying main distribution as fallback..."
            aws cloudfront create-invalidation --distribution-id E2B5BLXMFD9L4 --paths "/Umar_Zaman_Cloud_Engineer.pdf" || echo "‚ö†Ô∏è  Main distribution also not found"
          fi

      - name: Get resume URL
        run: |
          echo "üîó Direct S3 URL: https://umarzaman.ca.s3.amazonaws.com/Umar_Zaman_Cloud_Engineer.pdf"
          echo "üåê Custom domain: https://resume.umarzaman.ca/Umar_Zaman_Cloud_Engineer.pdf"
